def c51(state_size: Tuple[int, int], action_size: int, learning_rate: float) -> Model:
    """ c51 Neural Net """

    state_input = Input(shape=state_size)

    x = Dense(state_size[1], kernel_initializer="random_uniform", activation="relu")(state_input)
    x = BatchNormalization()(x)

    x = Dense(state_size[1] // 2, kernel_initializer="random_uniform", activation="relu")(x)
    x = BatchNormalization()(x)

    x = Dense(state_size[1] // 2, kernel_initializer="random_uniform", activation="relu")(x)
    x = BatchNormalization()(x)

    x = Flatten()(x)

    distribution_list = list()
    for _ in range(action_size):
        x = Dense(state_size[1], activation="softmax")(x)
        distribution_list.append(x)

    model = Model(input=state_input, output=distribution_list)

    model.compile(loss="categorical_crossentropy", optimizer=Adam(lr=learning_rate))

    return model
